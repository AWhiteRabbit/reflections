1. When would you want to create a remote repository rather than keeping all your work local?
  When i am ready to put my commit public. This will allow it it be updated and accessible 
  to anyone that is viewing the branch. Also can allow me to merge it with another branch.
  
2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
  I do not want my files to get changed before i do changes and commits. 
  
3. Describe the differences between forks, clones, and branches. When would you use one instead of another?
  Fork is a clone of anothers repository (only use on github). Clone is an exact copy of a branch (works locally and github).
  Branch is the repository where you files are kept (works locally and github).
4. What is the benefit of having a copy of the last known state of the remote stored locally?
  So you can prevent potential conflicts and diff check in case there is a problem.
5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	You can meet in person and exchange files that way. If you are not geographically close you can use cloud hosting and post to there. or email if files are small. It would be easier to exchange ideas and explain your process in person but you may forget some things to bring along(wrong hard drive). cloud hosting would make exchanging files easier but not sure how it would keep track of all versions or any revisions that need to go back a few steps.
6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	To experiment or change the branch details. Keeping a single master branch lets us simple modify the branch and push/pull commits easily. it also makes it hard to make changes or experiment. forking will let you change code and experiment without messing with the last known "good" branch. Although it will take more time to push changes back to the master branch.